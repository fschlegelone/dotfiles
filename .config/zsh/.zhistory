rm .zsh_history
rm .zhistory
nv options.zsh
sdf
cat -v
nvim .config/zsh/options.zsh
br install zsh-autosuggestions
br install zsh-syntax-highlighting
cd /opt/homebrew/share/zsh-syntax-highlighting/highlighters
eza
br list | grep "zoxide"
brew install zoxide
br list | grep "bash"
br rm --zap bash-completion@2
z -2
z 2
z ..
cd ~
z .config
z .config/zsh
z
z zsh
cd z
nv todo_cratos.md
nvim --version
touch copilot.lua
nv co
nv copilot.lua
mkdir myplugins
nv README.md
git remote add git@github.com:fschlegelone/neonote.git
git remote add origin git@github.com:fschlegelone/neonote.git
touch LICENSE
mkdir lua
mkdir lua/neonote
cd lua
touch init.lua
cd lua/plugins
touch neonote.lua
cd .config/n
nv neo
nv neonote.lua
nv init.lua
skhd --service-restart
yabai --restart-service
cd skhd
cd yabai
nv yabairc
kls
cd myplugins
cd ../..
nv myplugins/neonote/lua/neonote.lua
cd myplugins/neonote
git push 
cd .config/nvim/myplugins
cd neonote
brew install --cask katana
br rm --zap katana
brew install --cask flameshot
brew install --cask shottr
br rm --zap flameshot
cd .config/nvim
cd .config/nvim/myplugins/neonote
vn
mkdir neonote
touch neonote/test.md
touch neonote/test.txt
git commit -m "feat: Setup & Select function"
rm -rf neonote
touch todo.txt
touch todo.yml
lg
date
touch lua/plugins/obsidian.lua
nv lua/plugins/obsidian.lua
brew install ripgrep
brew install --cask obsidian
cd /opt/nas_home/filestore
cd obsidian
ck
lc
cd .config/skhd
nv skhdrc
skhd --restart-service
sudo chown -R root /Applications/KeeWeb.app
cd /opt/nas_home
brew update
brew upgrade
brew install azure-cli
azure-cli
azure
man azure-cli
az 
az configure
az upgrade
az config set auto-upgrade.enable=yes
az config
az config get
cd .azure
az account set --subscription 179dd20b-e2ea-45a0-8003-473940f3d4f1
az group list --output table
az vm create --resource-group "learn-c1d5e796-f40c-449b-904d-0946d759af32" --name my-vm --public-ip-sku Standard --image Ubuntu2204 --admin-username azureuser --generate-ssh-keys
az vm extension set --resource-group "learn-c1d5e796-f40c-449b-904d-0946d759af32" --vm-name my-vm --name customScript --publisher Microsoft.Azure.Extensions --version 2.1 --settings '{"fileUris":["https://raw.githubusercontent.com/MicrosoftDocs/mslearn-welcome-to-azure/master/configure-nginx.sh"]}' --protected-settings '{"commandToExecute": "./configure-nginx.sh"}'
br list | grep "podman"
br install podman
brew install make
podman machine 
br install --cask zed
cd .config/starship
nv .config/zsh/modules.zsh
br rm --zap jandedobbeleer/oh-my-posh
br list | grep "oh"
br list | grep "auto"
nvim
brew install prettier
brew install stylua
brew install black
brew install isort
pyenv --help
echo $PYENV_ROOT
cd .pyenv
pyenv help global
echo $PYENV_VERSION
python
python3
which python3
which python
pyenv versions
poetry env use 3.12.2 --global
poetry env use 3.12.2
poetry add pynvim --global
poetry add pynvim --global\

pip --version
which pip
which pip3
pip install pynvim
pip install --upgrade pynvim
cd .config
mkdir scripts
touch autoupdate_pynvim.sh
cd /opt
chinfo 
chown fschlegelone /opt
sudo chown fschlegelone /opt
chinfo opt
mkdir dev
sudo chown -R fschlegelone opt
cd opt
chinfo dev
cd dev
mkdir autogen
cd autogen
mkdir pynvim_autoupdate
chinfo pynvim_autoupdate
which nvim
ls -a | grep "nvim"
cd /opt/homebrew
cd Cellar
cd neo
cd neovim
chinfo autoupdate_pynvim.sh
chmod 744 autoupdate_pynvim.sh
cd /opt/dev/autogen/pynvim_autoupdate
cd .config/scripts
./autoupdate_pynvim.sh
nv autoupdate_pynvim.sh
brew doctor
cd .config/z
cd .config/zs
ls -a | grep "z"
ls -a | grep "zcom√º"
ls -a | grep "zcomp"
cd scripts
touch brewupdate.sh
chmod 744 brewupdate.sh
chinfo brewupdate.sh
br rm --zap neofetch
./brewupdate.sh
nv brewupdate.sh
fullupdate
br list | grep "node"
br list | grep "pnpm"
brew install pnpm
brew install node
man brew
br rm --zap pnpm
br install pnpm
echo $XDG_CACHE_HOME
echo $XDG_DATA_HOME
echo $XDG_STATE_HOME
mkdir ../pnpm
echo $PNPM_HOME
pnpm setup
nv .zshrc
nv lua/options.lua
pnpm install -g neovim
brew install tree-sitter
which curl
brew install gnu-tar
which tar
brew install curl
br rm --zap curl
br list | grep "libstdc"
br list | grep "tree"
tr
touch lua/plugins/treesitter.lua
nv lua/plugins/treesitter.lua
nv lua/autocmd.lua
source ~/.zshrc
br list | grep "make"
az login
az vm create --resource-group "learn-a2b8cd25-ef83-4ebf-a872-52a2a0be64ff" --name my-vm --public-ip-sku Standard --image Ubuntu2204 --admin-username azureuser --generate-ssh-keys
az vm extension set --resource-group "learn-a2b8cd25-ef83-4ebf-a872-52a2a0be64ff" --vm-name my-vm --name customScript --publisher Microsoft.Azure.Extensions --version 2.1 --settings '{"fileUris":["https://raw.githubusercontent.com/MicrosoftDocs/mslearn-welcome-to-azure/master/configure-nginx.sh"]}' --protected-settings '{"commandToExecute": "./configure-nginx.sh"}'
az vm list
IPADDRESS="$(az vm list-ip-addresses --resource-group "learn-a2b8cd25-ef83-4ebf-a872-52a2a0be64ff" --name my-vm --query "[].virtualMachine.network.publicIpAddresses[*].ipAddress" --output tsv)"
echo $IPADRESS
curl --connect-timeout 5 http://$IPADDRESS
az network nsg list --resource-group "learn-a2b8cd25-ef83-4ebf-a872-52a2a0be64ff" --query '[].name' --output tsv
az network nsg rule list --resource-group "learn-a2b8cd25-ef83-4ebf-a872-52a2a0be64ff" --nsg-name my-vmNSG
az network nsg rule create --resource-group "learn-a2b8cd25-ef83-4ebf-a872-52a2a0be64ff" --nsg-name my-vmNSG --name allow-http --protocol tcp --priority 100 --destination-port-range 80 --access Allow
az network nsg rule list --resource-group "learn-a2b8cd25-ef83-4ebf-a872-52a2a0be64ff" --nsg-name my-vmNSG --query '[].{Name:name, Priority:priority, Port:destinationPortRange, Access:access}' --output table
echo $IPADDRESS
curl --connect-timeout 5 http://$IPADDRESS\

br install --cask microsoft-edge
brew install --cask utm
cd /etc
ls 
ls -a | grep "user"
cd f
cd /etc/profile
cd /etc/profiles.d
nv /etc/pro
nv /etc/profile
ping smtp.office365.com
brew install --cask pdfelement
brewup
cd /opt/nas_home/documents/krankenkasse
cd ../alacritty
c
ls -a | gr "cratos"
cd .
cp cv_clients.pdf cv_clients.pptx ~/cratos_onedrive/OneDrive\ -\ Cratos
cd OneDrive\ -\ Cratos
cp CV_cratos_clients.docx CV_cratos_clients.pdf ~/cratos_onedrive/OneDrive\ -\ Cratos/CRATOS
cp selbstvorstellung.pptx vorlage_cv.pptx wallpaper_teams.jpg ~/cratos_onedrive/OneDrive\ -\ Cratos/CRATOS
mv cv_clients.pdf cv_clients.pptx CRATOS
cd CRATOS
defaults write -g KeyRepeat -int 0
killall SystemUIServer
cd .config/alacritty
nv alacritty.toml
cd src
cd nvi
touch lua/plugins/noice.lua
nv lua/plugins/noice.lua
which sed
which rg
cd vn
cd 1SE
./osx_settings.sh
which nvram
man nvram
nv src/osx_settings.sh
cllllllll
nv src/osx_settings.sh 
./src/osx_settings.sh
xcode-select --print-path
xcode-select --version
xcode-select --help
cd .config/zsh
brew --prefix
./src/init.sh
echo $SHELL
$_
echo $
echo $_
unused_formulae=$(comm -13 <(brew leaves) <(brew deps --installed --for-each --recursive | sort -u))\

unused_formulae=$(comm -13 <(brew leaves) <(brew deps --installed --for-each | sort -u))\

echo $unused_formulae
brew install zsh-completions
cd zs
rm -f ~/.zcompdump; compinit
chmod go-w '/opt/homebrew/share'
chmod -R go-w '/opt/homebrew/share/zsh'
br list
jq
br list --formula xz
br list --formula
br list --formula | grep "xz"
brew outdated --formula
mkdir ~/dotfiles
touch ~/dotfiles/test.txt
cd do
ls
ls -a
cd 
cd dotfiles
ls
./src/main.sh
./src/main.sh
cl
ls
cd 
ls
cd dotfiles
ls
cd ..
cd dotfiles.bak
ls
cd ..
ln
man ln
cd
ls -a | gr "."
cl
ls -a
cd 1S
cl
./src/main.sh
cl
./src/main.sh
cl
./src/main.sh
cl
./src/main.sh
cl
./src/main.sh
cd 
cd dotfiles
ls
touch .test
ls
ls -a
cl
cd
ls -a
cl
cd dotfiles
ls
ls -a
cd ..
ls -a | gr "git"
cl
./src/main.sh
cd dotfiles
ls
cd
ls -a 
ls -a | gr "git"
ls -a | gr "test"
cd
cd dotfile
ls -a
rm -rf .git
cl
cd
rm -rf dotfiles
rm -rf dotfiles.bak
cl
cd 1S
cl
./src/main.sh
cd dotfiles
ls
ls -a
cd
ls -a | gr "git"
cd dotfiles
ls
ls -a
cl
ls -a
cd
cd dotfiles
cl
ls
ls -a
rm -rf .git
cl
cd 
rm -rf dotfiles.bak
cd dotfiles
cl
ls -a
cl
rm test.json
git init
git branch -M main
touch README.md
git add .
git commit -m "Initial Commit"
git remote add origin git@github.com:fschlegelone/dotfiles.git
git push
cl
cp ~/.zshrc ~/dotfiles
ls
ls -a
git add .
git commit -m "add: .zshrc"
cl
git push
./src/main.sh
ls -a
cd 
cd dotfiles
ls -a
cd
cd dotfiles.bak
ls -a
cd 
cl
ls -a 
ls -a | gr "git"
cl
rm -rf .git
cl
rm -rf dotfiles
rm -rf dotfiles.bak
cl
./src/main.sh
ls -a | gr "git"
ls -a | gr "zsh"
rm -rf zshrc
cl
./src/main.sh
ls -a 
cd dotfiles
ls
ls -a
cl
git add .
git push
git add .
git commit -m "add: .zshrc"
git push
cl
cd 
./src/main.sh
cd dotfiles
ls -a
cd
ls -a
cp -r
cp --help
cl
man cp
cp -R ~/.lesshst ~/dotfiles
cd dotfiles
ls
ls -a
git add .
git commit -m "add: .lesshst"
git push
cl
cd 1S
./src/main.sh
cd
ls -a | gr "less"
ls -a
cl
./src/main.sh
cl
./src/main.sh
cl
./src/main.sh
cl
./src/main.sh
cd dotfiles
ls
ls -a
cd
cd dotfiles.bak
ls -a
cd
cl
ls -a
cp -R ~/.ssh ~/dotfiles/+#
cp -R ~/.ssh ~/dotfiles/
cd dotfiles
ls
rm -rf +\#
ls -a
cd .ssh
ls -a
cd
cd dotfiles
touch .gitignore
nv .gitignore
cl
ls -a
git add .
git commit -m "add: gitignore (for dotfiles repo)"
nv .gitignore
git add .
git commit -m "add: gitignore (for dotfiles repo)"
git push
cp -R ~/.config ~/dotfiles
cl
cd
cd dotfiles.bak
ls -a
nv .config/zsh/functions.zsh
cd
cd dotfiles
nv .config/zsh/functions.zsh
cd
cd dotfiles.bak
nv .config/zsh/functions.zsh
cl
cd dotfiles
ls
ls -a
br list | grep "gcc"
br install gcc
cd github/repos/1SETUP
cd
cd 1setup
pwd
cd 
cd github/repos
ls
cd 1setup
pwd
cl
ls
nv options/homebrew.json
cl
cd nv
nv
br list | gr "luajit"
cl
cd 1s
cd
cd github/repos/1setup
ls
nv options/homebrew.json
nv
br list | gr "libuv"
nv options/homebrew.json
vim options/homebrew.json
cl
nv
cl
nv
cl
nv
echo -e "\e[1mbold\e[0m"\
echo -e "\e[3mitalic\e[0m"\
echo -e "\e[3m\e[1mbold italic\e[0m"\
echo -e "\e[4munderline\e[0m"\
echo -e "\e[9mstrikethrough\e[0m"\
echo -e "\x1B[31red\e[0m"\
\
printf "\x1b[58:2::255:0:0m\x1b[4:1msingle\x1b[4:2mdouble\x1b[4:3mcurly\x1b[4:4mdotted\x1b[4:5mdashed\x1b[0m\n"
cl
echo -e "\e[1mbold\e[0m"
echo -e "\e[3mitalic\e[0m"
echo -e "\e[3m\e[1mbold italic\e[0m"
echo -e "\e[4munderline\e[0m"
echo -e "\e[9mstrikethrough\e[0m"
echo -e "\x1B[31red\e[0m"
cl
echo -e "\x1B[31red\e[0m"
cl
echo -e "\x1B[31red\e[0m"
cl
printf "\x1b[58:2::255:0:0m\x1b[4:1msingle\x1b[4:2mdouble\x1b[4:3mcurly\x1b[4:4mdotted\x1b[4:5mdashed\x1b[0m\n"
echo $CC
cl
which clang
cl
which gcc
br list | gr "gcc"
cd /opt/homebrew/bin
ls -a | gr "gcc"
cd
cl
which gcc
br rm --zap gcc
brew install gcc
cd 1s
cd ..
cd 1setup
cl
nv options/homebrew.json
br list | gr "llvm"
br install llvm
br list | gr "cmake"
br install cmake
br install cmake-docs
nv options/homebrew.json
br list | gr "llvm"
cd /opt/homebrew/opt/llvm/bin
ls
cl
echo $PATH
cd zsh
nv functions.zsh
print_path
ppath
echo $PATH
ppath
echo $PATH
ppath
echo $PATH
cl
printf "%s"
ppath
cl
nv variables.zsh
ppath
nv variables.zsh
ppath
nv variables.zsh
ppath
nv variables.zsh
ppath
nv variables.zsh
ppath
nv variables.zsh
cl
ppath
nv variables.zsh
ppath
nv variables.zsh
ppath
nv variables.zsh
ppath
nv variables.zsh
ppath
nv variables.zsh
ppath
nv variables.zsh
ppath
cl
ppath
cl
which pp
pp
cl
ppath
echo $PATH
ppath
echo $PATH
cl
echo $PATH
ppath
echo $PATH
cl
echo $PATH
ppath
echo $PATH
cl
echo $PATH
ppath
echo $PATH
cl
ppath
nv functions.zsh
ppath
nv variables.zsh
ppath
nv variables.zsh
ppath
cl
nv modules.zsh
cl
ls
nv environment.zsh
ppath
echo $LDFLAGS
echo $CPPFLAGS
nv environment.zsh
cl
echo $CPPFLAGS
echo $LDFLAGS
cl
nv environment.zsh
echo $LDFLAGS
echo $CPPFLAGS
cl
touch brewconfig.zsh
ls -a
nv brewconfig.zsh
brew
cl
mv brewconfig.zsh brew_config.zsh
ls -a
cl
nv brew_config.zsh
nv modules.zsh
ppath
nv environment.zsh
echo $LDFLAGS
cl
cd
cl
cd nv
nv 
md nas
cd n
ls
cd
cd nas
ls -a
pwd
mkdir notes
cl
br list | gr "xclip"
br install xclip
cd 
cd 1s
cd
cd github/repos/1setup
nv options/homebrew.json
cl
cd
echo $COLORTERM
echo $TERM
brew install catimg
cd
ckl
cl
cd github/repos/1setup
nv options/homebrew.json
cl
cd
cl
catimg ~/Pictures/wallpaper.jpeg
cl
nv
cd nas/notes
ls
nv lua/plugins/alpha.lua
nv
cl
nv
s
ls -a
rm testt.md
rm yupp.x.md
rm 2024-05-09.md
cl
nv
cd nas/notes
ls
ls -a
nv
cd
cd zsh
nv functions.zsh
todo
echo $NOTES_ROOT
nv variables.zsh
nv environment.zsh
ccl
cl
cd
cd nas
cd notes
ls
mkdir fschlegelone
mkdir cratos
ls
nv
touch cratos/test1.md
touch fschlegelone/test2.md
nv
ls -a
cd ..
chinfo nas
chmod 766 -R ~/nas/notes
chinfo nas/notes
chinfo nas
chinfo nas/notes/fschlegelone
cl
chinfo nas/notes/fschlegelone
nv
br list | gr "cmake"
br list | gr "make"
cl
which cmake
cl
which make
cl
nv
which cmake
nv
cl
cd nas/notes
ls
rm -rf cratos
rm -rf fschlegelone
ls -a
mkdir fschlegelone
mkdir cratos
touch cratos/test1.md
touch fschlegelone/test2.md
cl
touch test3.md
tre
tree
nv
cd 
cd nas/notes
ls
cd cratos
ls
nv
cl
nv
rm -rf fschlegelone
rm -rf cratos
cl
nv
cd
nv
cd cratos_onedrive
cd
cl
nv
cd github/repos/fireswag
nv
cd 
cd github/repos/fireswag
cl
./install.sh
brew install --cask keepassxc
cd zsh
nv environment.zsh
nv variables.zsh
./install.sh
cd zsh
nv variables.zsh
./install.sh
cl
./install.sh
cl
./install.sh
cd 
cd nas
ls
cd filestore
ls
cd firefox
open .
./install.sh
cd
cd fireswag
./install.sh
cl
./install.sh
cl
./install.sh
cl
./install.sh
cd
cd nas
ls
cd filestore
ls
cd firefox
ls
cl
cd
cd fireswag
cl
./install.sh
cl
./install.sh
nv install.sh
./install.sh
cl
./install.sh
cl
./install.sh
cl
./install.sh
nv fireswag.json
cl
cd
./install.sh
cd nas/filestore
ls
cd firefox
ls
man cp
nv
cl
./install.sh
git add .
git commit -m "update install script & readme"
git push
cl
git remote add origin git@github.com:fschlegelone/fireswag.git
git push --force
./install.sh
brew install --cask powershell
which pwsh
cl
which ps
ps
cd
cl
cd nvim
nv
cd
cd dotfiles
ls
git add .
git commit -m "update dotfiles"
git push
git remote add origin git@github.com:fschlegelone/dotfiles.git
br rm --zap --cask keeweb
cl
cd
cd nas/filestore
cd vault
ls
cd
cd nas/vault
cd keepass
ls
cd ..
cd kdbx
ls
mv Passwords.kdbx ../
ls
cd ..
ls
mv Passwords.kdbx keepass
ls
cd keepass
ls
mv Passwords.kdbx fschlegelone.kdbx
ls
cd
brew install --cask git-credential-manager
cd
cd 1setup
cd
cd 1setup
cd ..
cd 1setup
cl
nv options/homebrew.json
cd
cl
git credential-manager --help
git credential-manager --version
open .
nv .gitconfig
cd .ssh
ls
cl
nv
cd dotfiles
git push
cl
cd
cl
nv
cd github/repos
s
ls
mkdir nvtest
cd nvtest
touch test.html
nv test.html
nv
cl
nv
rm -rf ~/.local/state/nvim
rm -rf ~/.local/share/nvim
rm -rf ~/.cache/nvim
cl
cd
cl
nv
nv 
nv
cl
nv
cl
nv
rm -rf ~/.local/state/nvim
rm -rf ~/.local/share/nvim
rm -rf ~/.cache/nvim
cd
cl
nv
which regex
nv
nv .config
nv
nv .config
nv
cl
nv
nv 
nv
cl
cd nv
nv
cl
nv
cl
: 1715261710:0;cl
: 1715261711:0;cd dotfiles
: 1715261715:0;git add .
